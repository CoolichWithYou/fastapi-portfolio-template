name: CI

on:
  push:
    branches:
      - develop
    tags:
      - 'v'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      REDIS_URL: ${{ secrets.REDIS_URL }}


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Docker Compose
        run: sudo apt-get install docker-compose -y

      - name: compose up
        run: docker-compose -f docker-compose.prod.yml up --build -d

      - name: wait db launch
        run: |
          echo "Waiting for PostgreSQL..."
          until docker exec category_db pg_isready -U $POSTGRES_USER; do
            sleep 2
          done

      - name: Apply migrations
        run: docker exec category_server /bin/bash -c "cd ../ && alembic -c /server/alembic.ini upgrade head"

      - name: Run tests inside FastAPI container
        run: docker exec category_server /bin/bash -c "pytest --cache-clear"

      - name: Run linters inside FastAPI container
        run: docker exec category_server /bin/bash -c "isort $(SRC) && black $(SRC) && flake8 $(SRC)"
